<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\DatabaseMigrations;

use Illuminate\Notifications\DatabaseNotification;
use Tests\TestCase;
class NotificationsTest extends TestCase
{
    use DatabaseMigrations;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->signIn();
    }


    /** @test */
    public function a_notification_is_prepared_when_a_subscribed_thread_receives_a_new_reply_that_is_not_by_the_current_user()
    {



        $thread= create('App\Thread')->subscribe();

        $this->assertCount(0,auth()->user()->notifications);




        $this->assertCount(0,auth()->user()->fresh()->notifications);


        create(DatabaseNotification::class);
        $this->assertCount(1,auth()->user()->fresh()->notifications);
    }

    /** @test */
    public function a_user_can_fetch_their_unread_notifications()
    {

          create(DatabaseNotification::class);



        $username = auth()->user()->name;

        $response = $this->getJson("profiles/{$username}/notifications")->json();

        $this->assertCount(1,$response);
    }

    /** @test */
    public function a_user_can_mark_a_notification_as_read()
    {
        create(DatabaseNotification::class);


        tap(auth()->user(),function($user){
            $this->assertCount(1,auth()->user()->fresh()->unreadNotifications);

            $nid=auth()->user()->unreadNotifications->first()->id;
            $username = auth()->user()->name;

            $this->delete("profiles/{$username}/notifications/{$nid}");

            $this->assertCount(0,auth()->user()->fresh()->unreadNotifications);
        });



    }

   
  
}
